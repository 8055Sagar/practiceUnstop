{"ast":null,"code":"var _jsxFileName = \"/home/com154/reactPracticeProject/unstop/src/assessment/skillsFormChip/formChip.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Select, { components } from 'react-select';\nimport './f.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormChip = () => {\n  _s();\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const options = [{\n    value: 'option1',\n    label: 'Option 1'\n  }, {\n    value: 'option2',\n    label: 'Option 2'\n  }, {\n    value: 'option3',\n    label: 'Option 3'\n  }\n  // Add more options as needed\n  ];\n\n  const handleChange = selected => {\n    setSelectedOptions(selected);\n  };\n  const handleInputChange = inputValue => {\n    setInputValue(inputValue);\n  };\n  const handleRemoveOption = optionValue => {\n    setSelectedOptions(prevSelected => prevSelected.filter(option => option.value !== optionValue));\n  };\n\n  // Custom option rendering to show the \"cross\" in the selected options container\n  const Option = props => {\n    return /*#__PURE__*/_jsxDEV(components.Option, {\n      ...props,\n      children: [props.label, props.isSelected && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRemoveOption(props.value),\n        className: \"remove-button\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-options-container\",\n      children: selectedOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-option\",\n        children: [option.label, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveOption(option.value),\n          className: \"remove-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => handleInputChange(e.target.value),\n      placeholder: \"Type here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      value: selectedOptions,\n      onChange: handleChange,\n      isMulti: true,\n      isClearable: true,\n      components: {\n        Option: Option\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(FormChip, \"dvQBumXer0RFC5AoRrZG8P3zCPk=\");\n_c = FormChip;\nexport default FormChip;\nvar _c;\n$RefreshReg$(_c, \"FormChip\");","map":{"version":3,"names":["useState","Select","components","jsxDEV","_jsxDEV","FormChip","_s","selectedOptions","setSelectedOptions","inputValue","setInputValue","options","value","label","handleChange","selected","handleInputChange","handleRemoveOption","optionValue","prevSelected","filter","option","Option","props","children","isSelected","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onChange","e","target","placeholder","isMulti","isClearable","_c","$RefreshReg$"],"sources":["/home/com154/reactPracticeProject/unstop/src/assessment/skillsFormChip/formChip.js"],"sourcesContent":["import { useState } from 'react';\nimport Select, { components } from 'react-select';\nimport './f.css'; // Import the CSS file\n\nconst FormChip = () => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const options = [\n    { value: 'option1', label: 'Option 1' },\n    { value: 'option2', label: 'Option 2' },\n    { value: 'option3', label: 'Option 3' },\n    // Add more options as needed\n  ];\n\n  const handleChange = (selected) => {\n    setSelectedOptions(selected);\n  };\n\n  const handleInputChange = (inputValue) => {\n    setInputValue(inputValue);\n  };\n\n  const handleRemoveOption = (optionValue) => {\n    setSelectedOptions((prevSelected) =>\n      prevSelected.filter((option) => option.value !== optionValue)\n    );\n  };\n\n  // Custom option rendering to show the \"cross\" in the selected options container\n  const Option = (props) => {\n    return (\n      <components.Option {...props}>\n        {props.label}\n        {props.isSelected && (\n          <button\n            onClick={() => handleRemoveOption(props.value)}\n            className=\"remove-button\"\n          >\n            &times;\n          </button>\n        )}\n      </components.Option>\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"selected-options-container\">\n        {selectedOptions.map((option) => (\n          <div key={option.value} className=\"selected-option\">\n            {option.label}\n            <button\n              onClick={() => handleRemoveOption(option.value)}\n              className=\"remove-button\"\n            >\n              &times;\n            </button>\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => handleInputChange(e.target.value)}\n        placeholder=\"Type here...\"\n      />\n      <Select\n        options={options}\n        value={selectedOptions}\n        onChange={handleChange}\n        isMulti\n        isClearable\n        components={{\n          Option: Option,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default FormChip;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}